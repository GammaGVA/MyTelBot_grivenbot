from aiogram import Bot, Dispatcher, types, executor
from aiogram.dispatcher.filters import Text
from keyboard import Keyboards, text_hello, text_help, text_description
from config import tokenBot
from weather import get_weather

bot = Bot(tokenBot)
dp = Dispatcher(bot=bot)
kb = Keyboards()


async def on_startup(_) -> None:
    print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!')


@dp.message_handler(commands=['start'])
@dp.message_handler(Text(equals='–†–µ—Å—Ç–∞—Ä—Ç üåü'))
async def send_welcome(message: types.Message) -> None:
    # –ö–Ω–æ–ø–∫–∞ —Ä–µ—Å—Ç–∞—Ä—Ç/–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
    await message.delete()
    await message.answer(text_hello, protect_content=True)
    await bot.send_sticker(chat_id=message.from_user.id,
                           sticker='CAACAgIAAxkBAAEICX1kBuxgStdLz9-zDJmGlJ12yiX3jAACNQADrWW8FPWlcVzFMOXgLgQ',
                           reply_markup=kb.menu())


@dp.message_handler(commands=['menu'])
async def send_welcome(message: types.Message) -> None:
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    await message.delete()
    await message.answer(text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=kb.menu())


@dp.message_handler(commands=['help'])
@dp.message_handler(Text(equals='–ö–æ–º–∞–Ω–¥—ã ü´°'))
async def send_help(message: types.Message) -> None:
    # –ö–Ω–æ–ø–∫–∞ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥
    await message.delete()
    await message.answer(text=text_help,
                         parse_mode='HTML')


@dp.message_handler(commands=['description'])
@dp.message_handler(Text(equals='–û –±–æ—Ç–µ üòú'))
async def send_description(message: types.Message) -> None:
    # –ö–Ω–æ–ø–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è –±–æ—Ç–∞
    await message.delete()
    await message.answer(text=text_description)


@dp.message_handler(content_types='sticker')
async def sticker_id(message: types.Message) -> None:
    # –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è id —Å—Ç–∏–∫–µ—Ä–æ–≤
    await message.answer("–õ–æ–≤–∏ ID —Å—Ç–∏–∫–µ—Ä–∞ üòú")
    await message.answer(message.sticker.file_id)


@dp.message_handler(commands=['weather'])
@dp.message_handler(Text(equals='–ü–æ–≥–æ–¥–∞ ‚õÖÔ∏è'))
async def weather(message: types.Message) -> None:
    # –§—É–Ω–∫—Ü–∏—è –ø–æ –≤—ã–±–æ—Ä—É –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–≥–æ–¥—ã
    await message.delete()
    await message.answer(text=' –ü–æ–≥–æ–¥–∞ –≤...',
                         reply_markup=kb.weather())


@dp.callback_query_handler(Text(startswith='weather_'))
async def callback_weather(callback: types.CallbackQuery) -> None:
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback weather
    text_city = callback.data.split('_')[2]
    city = callback.data.split('_')[1]
    # callback.data = weather_city_text_city
    await callback.message.edit_text(text=f'–ü–æ–≥–æ–¥–∞ –≤ {text_city} üèò\n' + get_weather(city=city))
    await callback.answer()  # –ó–∞–≤–µ—Ä—à–∞–µ–º callback


if __name__ == '__main__':
    executor.start_polling(dispatcher=dp,
                           on_startup=on_startup,
                           skip_updates=True)
